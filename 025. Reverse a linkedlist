// Iterative
LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) {
    LinkedListNode<int> *prev = nullptr;
    LinkedListNode<int> *curr = head;

    while(curr != NULL){
        LinkedListNode<int> *temp = curr->next;
        curr->next = prev;
        prev = curr;
        curr = temp;
    }

    return prev;
}

/............................................................................................/

// Recursive
LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) {
    if(head == nullptr or head->next == nullptr)
        return head;

    LinkedListNode<int> *temp = head->next;
    LinkedListNode<int> *newHead = reverseLinkedList(head->next);

    temp->next = head;
    head->next = nullptr;

    return newHead;
}
